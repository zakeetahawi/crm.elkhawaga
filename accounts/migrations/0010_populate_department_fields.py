# Generated by Django 4.2.20 on 2025-04-15 17:04

from django.db import migrations

def populate_department_fields(apps, schema_editor):
    Department = apps.get_model('accounts', 'Department')
    
    # Map department codes to their URL names and icons
    department_data = {
        'customers': {'url_name': 'customers:customer_list', 'icon': 'fas fa-users'},
        'orders': {'url_name': 'orders:order_list', 'icon': 'fas fa-shopping-cart'},
        'inventory': {'url_name': 'inventory:inventory_list', 'icon': 'fas fa-boxes'},
        'factory': {'url_name': 'factory:factory_list', 'icon': 'fas fa-industry'},
        'inspections': {'url_name': 'inspections:inspection_list', 'icon': 'fas fa-clipboard-check'},
        'installations': {'url_name': 'installations:installation_list', 'icon': 'fas fa-tools'},
        'reports': {'url_name': 'reports:report_list', 'icon': 'fas fa-chart-bar'}
    }
    
    for department in Department.objects.all():
        if department.code in department_data:
            data = department_data[department.code]
            department.url_name = data['url_name']
            department.icon = data['icon']
            department.save()

def reverse_populate_department_fields(apps, schema_editor):
    Department = apps.get_model('accounts', 'Department')
    Department.objects.all().update(url_name='', icon='')

class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0009_department_icon_department_url_name'),
    ]

    operations = [
        migrations.RunPython(
            populate_department_fields,
            reverse_populate_department_fields
        )
    ]
